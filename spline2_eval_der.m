function [ z_x, z_y ] = spline2_eval_der( x, y, c, d, knots_x, knots_y )

x_size = size(x);

if min(x_size)>1
	xs = x(:,1);
	ys = y(1,:);
	ys = ys(:);

	[x2, y2] = ndgrid(xs, ys);
	assert(all(x2(:) == x(:)) && all(y2(:) == y(:)), 'x and y should be generated by ndgrid');
	clear x2 y2
    
	gridded = true;
else
	xs = x(:);
	ys = y(:);
	gridded = false;
end

xmin = knots_x(1);
xmax = knots_x(end);
tx = [repmat(xmin, [1, d]), knots_x, repmat(xmax, [1, d])];

ymin = knots_y(1);
ymax = knots_y(end);
ty = [repmat(ymin, [1, d]), knots_y, repmat(ymax, [1, d])];

nc_x = numel(knots_x) + d - 1;
nc_y = numel(knots_y) + d - 1;

[bspline_x, bspline_der_x] = bspline_v2( xs, nc_x, d, tx);
[bspline_y, bspline_der_y] = bspline_v2( ys, nc_y, d, ty);

if gridded
	z_x = bspline_der_x * reshape( c, [nc_y, nc_x])' * bspline_y';
	z_y = bspline_x * reshape( c, [nc_y, nc_x])' * bspline_der_y';
else
	z_x = dot(bspline_der_x * reshape( c, [nc_y, nc_x])', bspline_y,2);
	z_y = dot(bspline_x * reshape( c, [nc_y, nc_x])', bspline_der_y,2);

	z_x = reshape(z_x, x_size);
	z_y = reshape(z_y, x_size);
end